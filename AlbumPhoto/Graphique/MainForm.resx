<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>132, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACS
        DAAAAk1TRnQBSQFMAgEBAwEAAQgBAAEIAQABEAEAARABAAT/AREBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEQBgABCBIAAWYBCAGoARABZAEMAccBGAFkAQwBhgEMAUMBBAGoARABqAEQAckBEAHJ
        ARQByQEUAckBFAHqARQB6gEcAU0BMQEMATABDAE0AQ0BOAEOATwBDgE8AS8BQAEvAUABLwFAAS8BQAEv
        AUABLwFAAQ8BPAEOATwBDQE8AQ0BOAELATAB6gEYAUwBIQEJARkBpQEMAaUBEAGlARAB5gEUAQcBFQEI
        ARUBpAEMAcYBEAHmARABBwERAWgBGQGoAR0BqAEdIAABZQEMAekBIAGlARwBpQEcAYQBGAGnARwBZAEM
        AcgBFAHJARQByQEUAckBFAHJARQByQEUAQsBGQHqARwBLAEtAU0BJAFOASgBTwEsAW8BLAFwASwBcAEs
        AXABLAFwASwBcAEwAXABLAFwASwBcAEsAW8BLAFOASwBbwEoAU0BJAHpARQBbQEhAdABLQEHARkBpQEQ
        AcUBEAHmARQBKAEZAWkBHQEIARkB5gEUAQcBFQEGAREBRwEZAWgBHQHpASUgAAGFARwBrwFJARIBYgES
        AVIBEwFaAY4BSQGmASAByAEYAckBFAHJARAByQEUAckBFAHJARQB6wEYAesBGAHKARwBZgEAAWcBAAGI
        AQABiAEAAYoBAAGIAQABiQEAAYgBAAFmAQABaAEAAWcBAAFnAQABRQEAAWYBAAGKAQABZwEAAccBFAGP
        ASUBzwEtAUsBIQEHARkB5gEUAYgBIQHpASkBqgElAUkBHQEHARkB5gEUAScBGQFoASEBiAElAcgBKSAA
        AaUBKAERAWIBtAFuAc0BVQF0AWYBUwFiAQkBNQHIARgBqAEQAagBEAHJARAByQEUAckBFAHKARgB6gEY
        AcoBGAFEAQABZwEAAWYBAAFmAQABaAEEAUYBAAGIAQABRQEAAWYBAAFFAQQBZwEEAWYBAAFpAQQBaAEE
        AUQBAAFnAQQBbQEhAY8BKQFzAUYBbQElAa4BKQFIAR0BqgEpAesBLQEoARkBrAElAYoBJQFHAR0BRwEd
        AScBHQGoASkBKAEyIAAB0AFFAfEBUQFUAV4BEgFSAfEBTQGNAUEBKgEtASsBKQGvATUBrwE1Aa8BNQGv
        ATUBjwExAa8BOQGvATUB0QFBASYBCAEmAQwBRAEAAUcBCAEmARABSAEUAa0BSAFFAQgBrQFMAWkBMAFI
        ARwBiQEMASUBEAEFARABaAEEASUBDAGWAU4B1wFSAVMBQgHQASkBcwFCARIBNgGPASkBjgElAUkBGQER
        ATIB8QExAUgBIQFpASUBqQEpAacBKQHQAUogAAGPATUB0AFBAXwBdwFbAXMB1wFmAfEBRQFMAS0BsAE1
        AbABNQHRATkB0QE5ARMBQgHyAT0BEwFGARMBQgE0AUoBBAEMAQQBDAFHAQgBJQEQASYBEAFHASQB7QFg
        AewBSAHtAWAB7QFgAWkBKAEmARABJQEQAQUBEAEEAQwBBAEMAVsBZwH/AXcBdAFGAa8BKQG1AU4BEgE2
        Aa8BLQGvAS0BjQElAfEBNQG1AVIBjAEpAe8BOQEYAVsB8wFSAd0BdyAAAW4BKQFuASkB8wE9AfEBQQHJ
        ARQBTQElAW4BKQGyATUB0wE5AdMBOQHTATkB0wE5AfMBOQHzATkB8wE9ARMBQgEFAQwBBAEMASUBEAEl
        ARABJgEUAWgBJAFMAWEBTAFhAUwBYQFMAWEBqgEoAUcBFAEmARABJQEQAQQBDAEEAQwB3gFzAd8BdwF0
        AUYBjwEpAZUBTgEzAToBGQFbARkBWwHXAVYBfAFnARgBXwGuASkBWgFrAd4BdwHfAXcB3wF3IAABCwEd
        ASwBHQEsAR0BqAEUAcgBEAFPASUBTgElAZEBKQGSAS0BkgEtAZIBLQGSAS0BkQEtAZEBLQGRAS0BsgEx
        AQUBDAEFAQwBJQEQASYBEAEmARQBZwEcASsBfgFLAX4BSwF+AUsBfgGqASABSQEQAUgBEAEmARABBQEM
        AQQBDAHfAXMB3wFzAbcBTgESATYB1wFWAd4BcwHfAXMB3wFzAd8BcwHfAXMB3gFzAa4BKQGbAW8B3wFz
        Ad8BcwHfAXMgAAHqARAB6gEUAQsBGQHrARgBDAEdAU8BIQENAR0BcAElAXABJQFwASUBcAElAXABJQFw
        ASUBcAElAXABJQFwASUBBAEMAQUBDAElARABJgEUASYBFAFIARQBRwFmAeYBfgHmAX4BZwFqAWkBFAFq
        ARABaQEQAScBEAElAQwBBAEMAd8BbwHfAXMBvgFvAb4BbwG+AW8BvgFvAb4BawG+AW8BvgFzAd8BcwG+
        AW8BrwEtAXsBZwHfAXMB3wFzAd8BcyAAAcoBEAHJARAByQEQAeoBFAHqARQBLAEZAQwBGQFPASEBTwEh
        AU8BIQFPASEBTgEdAU8BIQFOASEBLgEdAU4BHQEFAQwBBQEMASUBEAEmARQBJwEUAUcBFAHoASgBQQF3
        AUEBdwEIAS0BiwEUAWoBEAFpARABJwEQASUBDAEEAQwBngFnAZ4BawFcAWMBXAFfARoBWwFcAWMBXAFj
        AX0BZwG+AW8BvwFvAb8BbwEyAToBnAFvAZ4BawG+AW8BvgFrIAABqAEMAagBDAHJARAB6gEUAeoBFAEL
        ARUB6gEUAS4BHQEuAR0BLQEdAS0BHQEMARkBLgEdAS0BHQEtAR0BLgEdAQUBDAEFARABJQEQASYBFAEn
        ARQBSAEYAWoBGAGsARwBrAEcAWoBGAFqARQBagEUAUkBEAEnARABJQEMAQQBDAF+AWMBngFnAX4BZwE7
        AVsB2AFOAdgBTgG4AU4BuAFSAVwBYwG+AWsBvwFvAXQBRgG9AW8BvgFvAX0BYwGeAW8gAAGHAQgBhwEM
        AagBDAGoAQwByQEQAckBEAGHAQwB6gEUAesBFAHqARAB6wEUAQsBFQEtAR0BLQEdAS0BHQEtAR0BBAEM
        AQUBEAElARABJgEUAScBGAFJARwBawEcAYwBIAGMARwBawEcAWkBGAFIARQBSAEQAUcBEAEmAQwBBAEM
        AV4BXwF+AV8BfgFjAV0BXwEbAVcB+QFSAbgBUgG4AVYBXQFjAZ4BZwGeAWsB9wFWAZ4BawGdAWsBnQFr
        Ab4BcyAAAWUBBAFlAQQBhwEIAWUBCAGGAQgBZgEIAYYBCAHqARQBqAEIAcoBEAHrARQBDAEZAS0BGQEt
        AR0BLQEdAS0BHQEFAQwBBQEQASYBGAEmARQBJwEYAUoBJAFrASQBjQEkAYwBJAGLARwBaQEYAUgBFAFI
        ARABRwEQASYBDAEEAQwBXgFbAV4BWwFeAV8BXgFfAV4BXwFdAV8BXQFfATwBXwE8AV8BPAFfATwBXwE7
        AV8BngFrAZ4BawG+AW8BvgFrIAABZgEEAYYBCAFlAQQBRQEEAWYBCAGHAQwBZQEIAakBEAGIAQgB6gEQ
        AesBFAELARUBLAEZAQwBGQEtARkBLQEZAQUBDAEFARABKAEgAScBGAEoARwBSgEoAWwBLAFtATABjQEk
        AWsBHAFpARgBSAEUAUcBFAFHARABJQEMAQQBDAFeAVsBPQFbAT0BWwFdAVsBPQFbAfoBVgHZAVIB2QFS
        AbgBUgGXAVIB2gFWATwBWwFdAV8BfgFjAX4BZwGeAWsgAAEjAQABRQEEAUQBBAFEAQQBZQEIAWYBCAFl
        AQgBqAEQAagBDAHKARABCwEVAesBFAHqARAB6gEUAQsBFQHrARQBBAEMAQUBEAEoASABKQEkASkBKAFL
        ASwBTAE0AW0BMAFsASgBagEcAUgBGAFHARQBJgEUASYBEAElAQwBBAEMAV0BWwE8AVcBPQFbAV4BWwFe
        AVsBPQFbARwBVwEbAVcBuAFSAdoBVgH7AVYB2QFOAfoBVgH6AVoB+gFaAVwBZyAAAYcBCAGIAQgBhwEI
        AWcBCAGHAQwBhwEMAagBDAHJARAByQEQAakBDAHqARAB6wEUAcoBEAGoAQwB6wEUAesBFAEEAQwBBQEQ
        ASgBIAEpASwBKQEoASsBMAFLATABawEsAWoBJAFpARwBSAEYAScBFAEmARQBJQEQAQQBDAEEAQwBXgFb
        AV4BWwFeAVsBXgFbAV4BWwFeAVsBPQFbAV4BWwEcAVcBPgFbAT0BVwHZAU4BuAFSAZcBUgGXAVIBuAFS
        IAABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/4EACw==
</value>
  </data>
</root>